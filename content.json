{"meta":{"title":"weepingfish","subtitle":"","description":"","author":"weepingfish","url":"weepingfish.github.io","root":"/"},"pages":[{"title":"About","date":"2020-06-25T06:10:07.000Z","updated":"2020-06-25T06:10:25.294Z","comments":true,"path":"about/index.html","permalink":"weepingfish.github.io/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2020-06-25T06:08:23.000Z","updated":"2020-06-25T06:09:45.153Z","comments":true,"path":"categories/index.html","permalink":"weepingfish.github.io/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2020-06-25T06:08:18.000Z","updated":"2020-06-25T06:09:52.341Z","comments":true,"path":"tags/index.html","permalink":"weepingfish.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"2020夏","slug":"2020-summer","date":"2020-07-02T03:29:48.283Z","updated":"2020-07-02T03:29:48.283Z","comments":true,"path":"2020/07/01/2020-summer/","link":"","permalink":"weepingfish.github.io/2020/07/01/2020-summer/","excerpt":"","text":"7.1：停滞的一年最近几天一直在记录时间，发现自己在家的极限工作时长大概是每天8-9h。 我对这个统计数据并不乐观，因为最近其实只是在针对一个数据集搭建infrastructure，并没有真正开始research。高效搬砖不难，难的是专注于解决open problem — 前者是一个不断获取虚假正反馈的过程，而后者才是科研的核心竞争力，同时也使人不断受到负反馈的打击。 对于后者，我一直很难做到专注。思考一段时间无果，便会走神 — 刷手机，吃东西，逛街。大概还是不够热爱吧。有时我会产生一种荒诞的对于机器的羡慕 — 理性、可靠，无需进食睡觉，不会痛苦沮丧，可以永不停歇地工作，只要定时更换元件，一生的长度可以无穷无尽。相较之下，肉体凡胎显得何其脆弱，却使得自由意志成为可能。一个优秀的科研工作者应该同时具有稳健的人格和优秀的技术能力。很遗憾，到目前为止，我二者都没有做到。 之所以决定离开第一个实验室，有相当一部分原因是抗拒做螺丝钉。但强行换方向之后，我的处境并没有变得更好 — 不做螺丝钉，意味着要lead一个project，而这对于沟通能力、情商、硬实力都有很高的要求。而我，面对全新的方向，好像连一个螺丝钉的技术水平都没有达到，更遑论自信地进行交流和展示了。 很慌。后天又要和实验室导师meet，然而我清楚这周什么都没干。不知道要怎么向她交代。她那么忙，浪费她的时间会让我觉得自己在犯罪。无数人羡慕我的博士学校，但我常常觉得，或许我不属于这里。我配不上这里。我应该滚回我的本科学校去，在一个方向扎根三年，才勉强有资格与这里的教授和PhD谈笑风生。 整整一年，我的时光好像停滞了，无论是科研还是说话办事，都毫无长进，而身边的人并没有站在原地等着我。 岁月已往者不可复，未来者不可期，见在者不可失。—— 林逋《省心录》 6.26：开始一个肥宅的自救之旅这些天看到一个blog：记录自己的时间，感到深受启发。 开始在Google Sheet记录时间，发现自己的working hours少得惨不忍睹，哎。。。 不过毕竟实习开始了，还是要认真工作的，就算实际工作时长达不到8h/d，productivity起码要对得起40h/wk的payroll。 如果实习每周40h，实验室每周30h，那么每天平均要工作10h。假设睡觉8h，每天还可以放松6h。这算是一个可以接受的工作状态。 考虑到每周一实习meet，每周五实验室meet，最划算的操作方式似乎是周五、六、日、一干实习，二、三、四做实验室。当然这只是理想情况，实际情况或许是a mix of shit。 预计每天能读一篇paper，方向取决于当天做的topic是实习还是实验室。为了避免当天纠结找文章，本周要看的paper应该上周末提前找好。 尝试使用Google Tasks记录日计划，每次向前看3天。考虑配合Google Sheet使用。 准备买体重秤，去实验室取回跑鞋，尽量多跑步。 P.S. 在服务器上加了一个后台程序，每隔10s从存blog的repo fetch一下，如果有diff就pull并重新deploy。这个蠢办法初步实现了用github的web界面写blog并自动发布，优势在于可以实现多终端（手机，ipad，etc）写博客。目前在ios上我正在试用WorkingCopy作为editor。 P.P.S. 就在线编辑器而言，gitbooks的编辑体验完爆github，甚至支持inline math，而且link share也很方便；硬伤是不支持discussion，所以我弃了。 6.25：序 · 深夜乱语这一天我终于下定决心搭建了这个博客。主题很清爽，我很满意。美中不足是尚不支持公式渲染和文章目录，不过先不管了，之后再加吧。 这个博客将用于复盘和总结。许多人劝我，不要沉湎于过去，只有着眼于未来才能有出路；但对我来说，如果不能对过去的事情进行自恰的归因，便无法彻底停止对自我的诘问。独自在家办公的这段时间，缺乏社交，这个问题变得尤为明显：有的时候，思维不受控制地发散，往事反复在脑海中浮现；一种对于人生的荒谬感挥之不去，觉得活着好麻烦 —— 饿了要吃饭，做了饭要收拾垃圾，垃圾满了要倒，身上脏了要洗澡，房租到期要付，钱没了要给资本家打工，如此循环往复，直到老去成为社会的负担。 有人说，你这样太消极了，人生的意义在于创造价值，在于沿途的喜悦。大概是因为这一年的博士生涯诸多不顺（又或许是因为之前的人生太顺利），我几乎忘了如何去感知琐碎的快乐。在取得成就之前，快乐仿佛是一种阿Q式的自欺欺人。我有时候怀疑自己根本不擅长科研，却又愈发希望能向同行和导师证明自己；我厌倦了这种矛盾的卑微感，却又身不由己地被项目的进程推着一天天地走下去。 “实在不行，你还可以拿个master走人嘛。当然我没有建议你这样做；我只是觉得这是一个可行的选项，压力不用那么大。” 但至少现在，我还没打算投降。 再试一试吧。就算是给三年前的自己一个交代，给一年前信任赏识我的人一个交代，给申请时的好运气一个交代。努力过了依旧做不到，那就不再强求，至少不再有遗憾。 而世之奇伟、瑰怪，非常之观，常在于险远，而人之所罕至焉，故非有志者不能至也。有志矣，不随以止也，然力不足者，亦不能至也。有志与力，而又不随以怠，至于幽暗昏惑而无物以相之，亦不能至也。然力足以至焉，于人为可讥，而在己为有悔；尽吾志也而不能至者，可以无悔矣，其孰能讥之乎？此余之所得也！ —— 王安石《游褒禅山记》 深夜强行给自己灌一碗毒鸡汤，明早还是要滚起来实习。","categories":[{"name":"life","slug":"life","permalink":"weepingfish.github.io/categories/life/"}],"tags":[{"name":"diary","slug":"diary","permalink":"weepingfish.github.io/tags/diary/"}]},{"title":"最近怎样？","slug":"2020-06-28-how-are-you","date":"2020-07-01T19:35:04.997Z","updated":"2020-07-01T19:35:04.997Z","comments":true,"path":"2020/07/01/2020-06-28-how-are-you/","link":"","permalink":"weepingfish.github.io/2020/07/01/2020-06-28-how-are-you/","excerpt":"","text":"实验室学长“最近怎样？” “啊，我最近在忙xxx课题，输入###输出%%%，可以看作是yyy和zzz方向的结合。我最近刚开始在小数据上做一些实验，结果遇到一堆问题…主要是对zzz方向不太熟，最近几周都没什么进展。我下周打算开始和实习那边meet，看看实习还能不能抢救一下…” 父母“最近怎样？” “最近挺好的，学校里的人都挺友善的，附近很安全。食堂能拿饭，门口草坪一堆人铺个毯子晒太阳。我常常穿过一条街去星爸爸买咖啡，路边开满了鲜花，建筑物也很美。另外，我最近研制出来一种炒饭，饭+鸡蛋+葱花+西兰花/玉米粒/虾仁/蘑菇片，加糖和味极鲜一炒就行，10分钟以内出锅，香到不行……什么，你说科研嘛。嗨，没啥新鲜事，每天都差不多。实在没有老板肯要我的话还有硕士这条退路嘛（笑）。” 对象“在干嘛？”（好像没问过最近怎样） “代码写不出来，等死中 /靠为什么我写的全是bug /又被老板骂了一顿，人生无望 /实验又不work，心态崩了 /昨天没咋睡觉，现在整个人飘在天上 /…” 朋友“最近怎样？” “混吃等死中…最近在弄xxx。等我弄完了就和你一起yyyy（大概率空头支票）。（内心OS：其实我特别想和你一直聊一通宵只是最近我浑身负能量怕传染给你而且我也不知道什么时候能好起来对不起我这个朋友真是一点用都没有希望不要因此失去一个朋友啊啊啊啊啊） 导师/路人“How are you?” “Oh I’m pretty good（浮夸语气+尴尬而不失礼貌的商业假笑）. How are you?”","categories":[{"name":"life","slug":"life","permalink":"weepingfish.github.io/categories/life/"}],"tags":[{"name":"misc","slug":"misc","permalink":"weepingfish.github.io/tags/misc/"}]},{"title":"Working with multiple GitHub accounts","slug":"2020-06-25-multiple-gits","date":"2020-06-25T19:36:50.023Z","updated":"2020-06-25T19:36:50.019Z","comments":true,"path":"2020/06/25/2020-06-25-multiple-gits/","link":"","permalink":"weepingfish.github.io/2020/06/25/2020-06-25-multiple-gits/","excerpt":"","text":"Suppose we have 2 github IDs, working account userA and personal account userB. This blog shows how to setup a git repo to commit &amp; push with the proper identity. SSH setupsFor password-free github access, we use SSH (Secure Shell, basically a protocol for remote communication) to push to / pull from github repos. For identity verification, you will have a public key stored in github, and a private key stored locally. Some algorithm (RSA) will check if these two keys agree with each other. For multiple github accounts, we need to generate the public/private key pair for each account: 1234567ssh-keygen # enter ~/.ssh/id_rsa_userA, &lt;empty&gt;, &lt;empty&gt;eval \"$(ssh-agent -s)\"ssh-add ~/.ssh/id_rsa_userAssh-keygen # enter ~/.ssh/id_rsa_userB, &lt;empty&gt;, &lt;empty&gt;eval \"$(ssh-agent -s)\"ssh-add ~/.ssh/id_rsa_userB Then, add the generated public keys to github for each account: 12cat ~/.ssh/id_rsa_userA.pub # login to userA and add to the SSH key of userAcat ~/.ssh/id_rsa_userB.pub # login to userA and add to the SSH key of userB Finally, configure 2 target remote hosts in ~/.ssh/config. This is for specifying the identity file to use when pushing to / pulling from github with SSH: 123456789Host github-userA Hostname github.com User git IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_userA Host github-userB Hostname github.com User git IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_userB Git configsIn your git repo, first setup the identity that will be displayed in commit messages: 12git config user.name \"userA\" git config user.email \"userA@example.com\" Then configure the identity for account verification when pushing to / pulling from github: 123# suppose we have created somerepo under userA at githubgit remote add origin github-userA:userA/&lt;somerepo&gt;.git git push -u origin master You are all set! Next time for this repo you can simply do git pull / git push. Have fun!","categories":[{"name":"tech","slug":"tech","permalink":"weepingfish.github.io/categories/tech/"}],"tags":[{"name":"git","slug":"git","permalink":"weepingfish.github.io/tags/git/"}]},{"title":"Building a Hexo Blog with GitHub Pages","slug":"2020-06-24-hexo-blog","date":"2020-06-25T06:15:01.036Z","updated":"2020-06-25T06:15:01.036Z","comments":true,"path":"2020/06/24/2020-06-24-hexo-blog/","link":"","permalink":"weepingfish.github.io/2020/06/24/2020-06-24-hexo-blog/","excerpt":"","text":"Install Hexo12npm install -g hexo-cliexport PATH=~/.npm-global/lib/node_modules/hexo/bin:$PATH Create root Hexo folder123mkdir hexo_dircd hexo_dirhexo init Configure Git RepoCreate a github repo &lt;username&gt;.github.io and edit _config.yml: 1url: &lt;username&gt;.github.io Download a theme123# 2 alternative themes that I find usefulgit clone https://github.com/cofess/hexo-theme-pure.git themes/puregit clone https://github.com/yscoder/hexo-theme-indigo themes/indigo Then edit the theme property in _config.yml and setup theme-specific properties in themes/&lt;theme&gt;/_config.yml Preview Locally1hexo serve PublishFor GitHub Pages, we need to install hexo-deployer-git plugin and config the deploy property in _config.yml. Note that personal pages must be pushed to the master branch (not gh-pages!) 1234deploy: type: git repo: git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git branch: master Then publish to GitHub: 123hexo cleanhexo generatehexo deploy CommentMost themes have built-in support for comment systems. I personally find gitalk to be the most easy-to-use one. You just need to apply for a new Git OAuth application and fill in necessary info in themes/&lt;theme&gt;/_config.yml: 123456gitalk: owner: &lt;username&gt; admin: &lt;username&gt; repo: &lt;username&gt;.github.io ClientID: &lt;ClientID&gt; ClientSecret: &lt;ClientSecret&gt; Note that the comment system should be working even in a local review. Tags, Categories, About123hexo new page tagshexo new page categorieshexo new page about In the created .md files, edit the type attribute: 123456---title: Tagsdate: 2020-06-24 23:10:07layout: tagstype: tags---","categories":[{"name":"tech","slug":"tech","permalink":"weepingfish.github.io/categories/tech/"}],"tags":[{"name":"web","slug":"web","permalink":"weepingfish.github.io/tags/web/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-06-25T03:38:27.678Z","updated":"2020-06-25T03:38:27.678Z","comments":true,"path":"2020/06/24/hello-world/","link":"","permalink":"weepingfish.github.io/2020/06/24/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"life","slug":"life","permalink":"weepingfish.github.io/categories/life/"},{"name":"tech","slug":"tech","permalink":"weepingfish.github.io/categories/tech/"}],"tags":[{"name":"diary","slug":"diary","permalink":"weepingfish.github.io/tags/diary/"},{"name":"misc","slug":"misc","permalink":"weepingfish.github.io/tags/misc/"},{"name":"git","slug":"git","permalink":"weepingfish.github.io/tags/git/"},{"name":"web","slug":"web","permalink":"weepingfish.github.io/tags/web/"}]}