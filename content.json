{"meta":{"title":"weepingfish","subtitle":"","description":"","author":"weepingfish","url":"weepingfish.github.io","root":"/"},"pages":[{"title":"About","date":"2020-06-25T06:10:07.000Z","updated":"2020-06-25T06:10:25.294Z","comments":true,"path":"about/index.html","permalink":"weepingfish.github.io/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2020-06-25T06:08:23.000Z","updated":"2020-06-25T06:09:45.153Z","comments":true,"path":"categories/index.html","permalink":"weepingfish.github.io/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2020-06-25T06:08:18.000Z","updated":"2020-06-25T06:09:52.341Z","comments":true,"path":"tags/index.html","permalink":"weepingfish.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"2020夏","slug":"2020-summer","date":"2020-06-27T06:47:23.239Z","updated":"2020-06-27T06:47:23.239Z","comments":true,"path":"2020/06/26/2020-summer/","link":"","permalink":"weepingfish.github.io/2020/06/26/2020-summer/","excerpt":"","text":"6.26: 开始一个肥宅的自救之旅这些天看到一个blog：记录自己的时间，感到深受启发。 开始在Google Sheet记录时间，发现自己的working hours少得惨不忍睹，哎。。。 不过毕竟实习开始了，还是要认真工作的，就算实际工作时长达不到8h/d，productivity起码要对得起40h/wk的payroll。 如果实习每周40h，实验室每周30h，那么每天平均要工作10h。假设睡觉8h，每天还可以放松6h。这算是一个可以接受的工作状态。 考虑到每周一实习meet，每周五实验室meet，最划算的操作方式似乎是周五、六、日、一干实习，二、三、四做实验室。当然这只是理想情况，实际情况或许是a mix of shit。 预计每天能读一篇paper，方向取决于当天做的topic是实习还是实验室。为了避免当天纠结找文章，本周要看的paper应该上周末提前找好。 尝试使用Google Tasks记录日计划，每次向前看3天。考虑配合Google Sheet使用。 准备买体重秤，去实验室取回跑鞋，尽量多跑步。 test 6.25：序 · 深夜乱语这一天我终于下定决心搭建了这个博客。主题很清爽，我很满意。美中不足是尚不支持公式渲染和文章目录，不过先不管了，之后再加吧。 这个博客将用于复盘和总结。许多人劝我，不要沉湎于过去，只有着眼于未来才能有出路；但对我来说，如果不能对过去的事情进行自恰的归因，便无法彻底停止对自我的诘问。独自在家办公的这段时间，缺乏社交，这个问题变得尤为明显：有的时候，思维不受控制地涣散，往事反复在脑海中浮现；一种对于人生的荒谬感挥之不去，觉得活着好麻烦 —— 饿了要吃饭，做了饭要收拾垃圾，垃圾满了要倒，身上脏了要洗澡，房租到期要付，钱没了要给资本家打工，如此循环往复，直到老去成为社会的负担。 有人说，你这样太消极了，人生的意义在于创造价值，在于沿途的喜悦。大概是因为这一年的博士生涯诸多不顺（又或许是因为之前的人生太顺利），我几乎忘了如何去感知琐碎的快乐。在取得成就之前，快乐仿佛是一种阿Q式的自欺欺人。我有时候怀疑自己根本不擅长科研，却又愈发希望能向同行和导师证明自己；我厌倦了这种矛盾的卑微感，却又身不由己地被项目的进程推着一天天地走下去。 “实在不行，你还可以拿个master走人嘛。当然我没有建议你这样做；我只是觉得这是一个可行的选项，压力不用那么大。” 至少现在，我还没打算投降。选择读博，一部分原因是想出国但又没钱，而另一部分原因则是三年前在实习中看到的一丝微弱的光 —— 那种狂妄而执着地解决一个不存在已知方案的问题的勇气，过程中不断思考新方法带来的快乐，以及问题解决后获得的巨大成就感，在很大程度上支撑着现在的我。那一年，19岁的我第一次觉得，或许也可以试着读一读博。 再试一试吧。就算是给三年前的自己一个交代，给一年前信任赏识我的人一个交代，给申请时的好运气一个交代。努力过了依旧做不到，那就不再强求，至少不再有遗憾。 而世之奇伟、瑰怪，非常之观，常在于险远，而人之所罕至焉，故非有志者不能至也。有志矣，不随以止也，然力不足者，亦不能至也。有志与力，而又不随以怠，至于幽暗昏惑而无物以相之，亦不能至也。然力足以至焉，于人为可讥，而在己为有悔；尽吾志也而不能至者，可以无悔矣，其孰能讥之乎？此余之所得也！ —— 王安石《游褒禅山记》 深夜强行给自己灌一碗毒鸡汤，明早还是要滚起来实习。","categories":[{"name":"life","slug":"life","permalink":"weepingfish.github.io/categories/life/"}],"tags":[{"name":"diary","slug":"diary","permalink":"weepingfish.github.io/tags/diary/"}]},{"title":"Working with multiple GitHub accounts","slug":"2020-06-25-multiple-gits","date":"2020-06-25T19:36:50.023Z","updated":"2020-06-25T19:36:50.019Z","comments":true,"path":"2020/06/25/2020-06-25-multiple-gits/","link":"","permalink":"weepingfish.github.io/2020/06/25/2020-06-25-multiple-gits/","excerpt":"","text":"Suppose we have 2 github IDs, working account userA and personal account userB. This blog shows how to setup a git repo to commit &amp; push with the proper identity. SSH setupsFor password-free github access, we use SSH (Secure Shell, basically a protocol for remote communication) to push to / pull from github repos. For identity verification, you will have a public key stored in github, and a private key stored locally. Some algorithm (RSA) will check if these two keys agree with each other. For multiple github accounts, we need to generate the public/private key pair for each account: 1234567ssh-keygen # enter ~/.ssh/id_rsa_userA, &lt;empty&gt;, &lt;empty&gt;eval \"$(ssh-agent -s)\"ssh-add ~/.ssh/id_rsa_userAssh-keygen # enter ~/.ssh/id_rsa_userB, &lt;empty&gt;, &lt;empty&gt;eval \"$(ssh-agent -s)\"ssh-add ~/.ssh/id_rsa_userB Then, add the generated public keys to github for each account: 12cat ~/.ssh/id_rsa_userA.pub # login to userA and add to the SSH key of userAcat ~/.ssh/id_rsa_userB.pub # login to userA and add to the SSH key of userB Finally, configure 2 target remote hosts in ~/.ssh/config. This is for specifying the identity file to use when pushing to / pulling from github with SSH: 123456789Host github-userA Hostname github.com User git IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_userA Host github-userB Hostname github.com User git IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_userB Git configsIn your git repo, first setup the identity that will be displayed in commit messages: 12git config user.name \"userA\" git config user.email \"userA@example.com\" Then configure the identity for account verification when pushing to / pulling from github: 123# suppose we have created somerepo under userA at githubgit remote add origin github-userA:userA/&lt;somerepo&gt;.git git push -u origin master You are all set! Next time for this repo you can simply do git pull / git push. Have fun!","categories":[{"name":"tech","slug":"tech","permalink":"weepingfish.github.io/categories/tech/"}],"tags":[{"name":"git","slug":"git","permalink":"weepingfish.github.io/tags/git/"}]},{"title":"Building a Hexo Blog with GitHub Pages","slug":"2020-06-24-hexo-blog","date":"2020-06-25T06:15:01.036Z","updated":"2020-06-25T06:15:01.036Z","comments":true,"path":"2020/06/24/2020-06-24-hexo-blog/","link":"","permalink":"weepingfish.github.io/2020/06/24/2020-06-24-hexo-blog/","excerpt":"","text":"Install Hexo12npm install -g hexo-cliexport PATH=~/.npm-global/lib/node_modules/hexo/bin:$PATH Create root Hexo folder123mkdir hexo_dircd hexo_dirhexo init Configure Git RepoCreate a github repo &lt;username&gt;.github.io and edit _config.yml: 1url: &lt;username&gt;.github.io Download a theme123# 2 alternative themes that I find usefulgit clone https://github.com/cofess/hexo-theme-pure.git themes/puregit clone https://github.com/yscoder/hexo-theme-indigo themes/indigo Then edit the theme property in _config.yml and setup theme-specific properties in themes/&lt;theme&gt;/_config.yml Preview Locally1hexo serve PublishFor GitHub Pages, we need to install hexo-deployer-git plugin and config the deploy property in _config.yml. Note that personal pages must be pushed to the master branch (not gh-pages!) 1234deploy: type: git repo: git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git branch: master Then publish to GitHub: 123hexo cleanhexo generatehexo deploy CommentMost themes have built-in support for comment systems. I personally find gitalk to be the most easy-to-use one. You just need to apply for a new Git OAuth application and fill in necessary info in themes/&lt;theme&gt;/_config.yml: 123456gitalk: owner: &lt;username&gt; admin: &lt;username&gt; repo: &lt;username&gt;.github.io ClientID: &lt;ClientID&gt; ClientSecret: &lt;ClientSecret&gt; Note that the comment system should be working even in a local review. Tags, Categories, About123hexo new page tagshexo new page categorieshexo new page about In the created .md files, edit the type attribute: 123456---title: Tagsdate: 2020-06-24 23:10:07layout: tagstype: tags---","categories":[{"name":"tech","slug":"tech","permalink":"weepingfish.github.io/categories/tech/"}],"tags":[{"name":"web","slug":"web","permalink":"weepingfish.github.io/tags/web/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-06-25T03:38:27.678Z","updated":"2020-06-25T03:38:27.678Z","comments":true,"path":"2020/06/24/hello-world/","link":"","permalink":"weepingfish.github.io/2020/06/24/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"life","slug":"life","permalink":"weepingfish.github.io/categories/life/"},{"name":"tech","slug":"tech","permalink":"weepingfish.github.io/categories/tech/"}],"tags":[{"name":"diary","slug":"diary","permalink":"weepingfish.github.io/tags/diary/"},{"name":"git","slug":"git","permalink":"weepingfish.github.io/tags/git/"},{"name":"web","slug":"web","permalink":"weepingfish.github.io/tags/web/"}]}